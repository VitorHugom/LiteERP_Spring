version: '3.8'

services:
  # Banco de dados PostgreSQL
  liteerp-db:
    image: postgres:15-alpine
    container_name: liteerp-db
    environment:
      POSTGRES_DB: LiteERP
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # Sem exposição de portas - apenas comunicação interna via Docker network
    volumes:
      - liteerp_db_data:/var/lib/postgresql/data
    networks:
      - lite-erp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend LiteERP (Spring Boot)
  liteerp-backend:
    image: vitorhugoms/lite-erp-backend:latest
    container_name: liteerp-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://liteerp-db:5432/LiteERP
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: 1804
      JWT_SECRET: seguranca-top
      SERVER_PORT: 8080
    ports:
      - "8080:8080"  # Exposto para proxy reverso
    depends_on:
      liteerp-db:
        condition: service_healthy
    networks:
      - lite-erp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend LiteERP (Angular)
  liteerp-frontend:
    image: vitorhugoms/lite-erp-frontend:latest
    container_name: liteerp-frontend
    environment:
      # Configurações do frontend Angular - PRODUÇÃO
      # Frontend se comunica com API externa de produção
      API_URL: https://api.lite-erp-enterprise.com
    ports:
      - "4200:80"  # Exposto para proxy reverso (mantendo consistência com local)
    depends_on:
      liteerp-backend:
        condition: service_healthy
    networks:
      - lite-erp-network
    restart: unless-stopped

volumes:
  liteerp_db_data:

networks:
  lite-erp-network:
    driver: bridge
